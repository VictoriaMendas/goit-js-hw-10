{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\n\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst btnStart = document.querySelector('button[data-start]');\nconst timerContainer = document.querySelector('.timer');\n\nbtnStart.disabled = true;\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      return window.alert('Please choose a date in the future');\n    }\n    btnStart.disabled = false;\n    userSelectedDate = selectedDates[0];\n  },\n};\nflatpickr(input, options);\n\nbtnStart.addEventListener('click', onClick);\n\nfunction onClick(e) {\n  btnStart.disabled = true;\n  input.disabled = true;\n  const intervalId = setInterval(() => {\n    const currentDate = Date.now();\n    const different = userSelectedDate - currentDate;\n    const { days, hours, minutes, seconds } = convertMs(different);\n    timerContainer.querySelector('[data-days]').textContent =\n      addLeadingZero(days);\n    timerContainer.querySelector('[data-hours]').textContent =\n      addLeadingZero(hours);\n    timerContainer.querySelector('[data-minutes').textContent =\n      addLeadingZero(minutes);\n    timerContainer.querySelector('[data-seconds]').textContent =\n      addLeadingZero(seconds);\n\n    if (different < 1000) {\n      clearInterval(intervalId);\n    }\n  }, 1000);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["input","btnStart","timerContainer","userSelectedDate","options","selectedDates","flatpickr","onClick","e","intervalId","currentDate","different","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"oFAIA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAiB,SAAS,cAAc,QAAQ,EAEtDD,EAAS,SAAW,GAEpB,IAAIE,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,GAAK,IAAI,KACzB,OAAO,OAAO,MAAM,oCAAoC,EAE1DJ,EAAS,SAAW,GACpBE,EAAmBE,EAAc,EAClC,CACH,EACAC,EAAUN,EAAOI,CAAO,EAExBH,EAAS,iBAAiB,QAASM,CAAO,EAE1C,SAASA,EAAQC,EAAG,CAClBP,EAAS,SAAW,GACpBD,EAAM,SAAW,GACjB,MAAMS,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAc,KAAK,MACnBC,EAAYR,EAAmBO,EAC/B,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAS,EAC7DT,EAAe,cAAc,aAAa,EAAE,YAC1Ce,EAAeL,CAAI,EACrBV,EAAe,cAAc,cAAc,EAAE,YAC3Ce,EAAeJ,CAAK,EACtBX,EAAe,cAAc,eAAe,EAAE,YAC5Ce,EAAeH,CAAO,EACxBZ,EAAe,cAAc,gBAAgB,EAAE,YAC7Ce,EAAeF,CAAO,EAEpBJ,EAAY,KACd,cAAcF,CAAU,CAE3B,EAAE,GAAI,CACT,CAEA,SAASQ,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CACA,SAASF,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}